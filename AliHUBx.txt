local imageId = "rbxassetid://83777934849279"
local toolName = "Tung Bat"

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local uis = game:GetService("UserInputService")
local baseY = 100

local storedPlayerName = player.DisplayName
local IFtpc = false

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ModMenuGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local function createGradient(parent)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255,0,0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(20,20,20))
    }
    gradient.Rotation = 90
    gradient.Parent = parent
end

local mainButton = Instance.new("ImageButton")
mainButton.Name = "MainButton"
mainButton.Size = UDim2.new(0, 70, 0, 70)
mainButton.Position = UDim2.new(0.1, 0, 0.1, 0)
mainButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainButton.BorderSizePixel = 2
mainButton.BorderColor3 = Color3.fromRGB(255,0,0)
mainButton.Image = imageId
mainButton.Parent = screenGui
mainButton.Draggable = true

local modMenu = Instance.new("Frame")
modMenu.Name = "ModMenu"
modMenu.Size = UDim2.new(0, 250, 0, 320)
modMenu.Position = UDim2.new(0.1, 80, 0.1, 0)
modMenu.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
modMenu.BorderSizePixel = 2
modMenu.BorderColor3 = Color3.fromRGB(255,0,0)
modMenu.Visible = false
modMenu.Parent = screenGui
createGradient(modMenu)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Text = "MOD MENU"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(255,0,0)
title.TextSize = 28
title.Parent = modMenu

local dragging = false
local dragInput, dragStart, startPos

modMenu.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = modMenu.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

modMenu.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        modMenu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

local function createToggle(name, ypos)
    local frame = Instance.new("Frame")
    frame.BackgroundTransparency = 1
    frame.Size = UDim2.new(1, -20, 0, 45)
    frame.Position = UDim2.new(0, 10, 0, ypos)
    frame.Parent = modMenu

    local button = Instance.new("TextButton")
    button.Name = name.."Button"
    button.Size = UDim2.new(0.7, 0, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(40,0,0)
    button.TextColor3 = Color3.fromRGB(255,255,255)
    button.Font = Enum.Font.Gotham
    button.Text = name
    button.TextSize = 20
    button.Parent = frame

    local toggle = Instance.new("TextLabel")
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(0.3, 0, 1, 0)
    toggle.Position = UDim2.new(0.7, 0, 0, 0)
    toggle.BackgroundColor3 = Color3.fromRGB(60,0,0)
    toggle.TextColor3 = Color3.fromRGB(255,0,0)
    toggle.Font = Enum.Font.GothamBold
    toggle.Text = "OFF"
    toggle.TextSize = 18
    toggle.Parent = frame

    return button, toggle
end

local y = 50
local buttons = {}
buttons.TPBASE, buttons.TPBASEToggle = createToggle("TP BASE", y)
buttons.Speed, buttons.SpeedToggle = createToggle("Speed Boost", y+50)
buttons.Jump, buttons.JumpToggle = createToggle("Jump Boost", y+100)
buttons.AutoHit, buttons.AutoHitToggle = createToggle("Auto Hit", y+150)

local toggles = {
    TPBASE = false,
    Speed = false,
    Jump = false,
    AutoHit = false,
}

local connections = {}

local noclipActive = false
local noclipConnection = nil

local function setNoclip(active)
    if noclipActive == active then return end
    noclipActive = active
    if noclipActive then
        noclipConnection = runService.Stepped:Connect(function()
            local char = player.Character
            if char then
                for _, part in ipairs(char:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide == true then
                        part.CanCollide = false
                    end
                end
            end
        end)
    else
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
        local char = player.Character
        if char then
            for _, part in ipairs(char:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = true
                end
            end
        end
    end
end

local function freezeCharacter(char, freezeTime)
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = true
        end
    end
    wait(freezeTime or 1)
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
        end
    end
end

local function teleportToBase()
    local Plots = workspace:FindFirstChild("Plots")
    if not Plots then return end

    for _, plotModel in ipairs(Plots:GetChildren()) do
        local plotSign = plotModel:FindFirstChild("PlotSign")
        if plotSign then
            local surfaceGui = plotSign:FindFirstChild("SurfaceGui")
            if surfaceGui and surfaceGui:IsA("SurfaceGui") then
                local frame = surfaceGui:FindFirstChildWhichIsA("Frame")
                if frame then
                    local textLabel = frame:FindFirstChildWhichIsA("TextLabel")
                    if textLabel and textLabel.Text == (storedPlayerName .. "'s Base") then
                        local char = player.Character
                        if char and char:FindFirstChild("HumanoidRootPart") then
                            local targetPosition = plotSign.CFrame.Position + Vector3.new(0, -18, 0)
                            char.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                            IFtpc = true
                            freezeCharacter(char, 1)
                            IFtpc = false
                        end
                        break
                    end
                end
            end
        end
    end
end

buttons.TPBASE.MouseButton1Click:Connect(function()
    teleportToBase()
end)

mainButton.MouseButton1Click:Connect(function()
    if modMenu.Visible then
        local shrinkTween = tweenService:Create(modMenu, TweenInfo.new(0.35, Enum.EasingStyle.Exponential, Enum.EasingDirection.In), {Size = UDim2.new(0,0,0,0)})
        shrinkTween:Play()
        shrinkTween.Completed:Wait()
        modMenu.Visible = false
        modMenu.Size = UDim2.new(0, 250, 0, 320)
    else
        modMenu.Visible = true
        modMenu.Size = UDim2.new(0, 0, 0, 0)
        local growTween = tweenService:Create(modMenu, TweenInfo.new(0.35, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0,250,0,320)})
        growTween:Play()
    end
end)

-- Speed Boost (BodyMover method, safer for anti-cheat)
local speedBoostEnabled = false
local linearVelocity

function enableSpeedBoost()
    speedBoostEnabled = true
    local char = player.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local att = hrp:FindFirstChild("SpeedAtt")
    if not att then
        att = Instance.new("Attachment", hrp)
        att.Name = "SpeedAtt"
    end

    linearVelocity = hrp:FindFirstChild("SpeedBoost") or Instance.new("LinearVelocity")
    linearVelocity.Name = "SpeedBoost"
    linearVelocity.Attachment0 = att
    linearVelocity.Parent = hrp
    linearVelocity.MaxForce = 5000
    linearVelocity.RelativeTo = Enum.ActuatorRelativeTo.Attachment0

    local updateDir
    updateDir = runService.RenderStepped:Connect(function()
        if speedBoostEnabled and hrp and player.Character and player.Character:FindFirstChild("Humanoid") then
            linearVelocity.VectorVelocity = hrp.CFrame.LookVector * 13
        else
            linearVelocity.VectorVelocity = Vector3.new(0,0,0)
        end
    end)
    connections.Speed = updateDir
end

function disableSpeedBoost()
    speedBoostEnabled = false
    if linearVelocity then
        linearVelocity:Destroy()
        linearVelocity = nil
    end
    if connections.Speed then
        connections.Speed:Disconnect()
        connections.Speed = nil
    end
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local att = char.HumanoidRootPart:FindFirstChild("SpeedAtt")
        if att then att:Destroy() end
    end
end

buttons.Speed.MouseButton1Click:Connect(function()
    toggles.Speed = not toggles.Speed
    buttons.SpeedToggle.Text = toggles.Speed and "ON" or "OFF"
    if toggles.Speed then
        enableSpeedBoost()
    else
        disableSpeedBoost()
    end
end)

-- Jump Boost (impulso vertical, sem JumpPower)
local jumpBoostActive = false
local jumpBoostMultiplier = 2.2

local function onJumpRequest()
    if toggles.Jump then
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            char.HumanoidRootPart.Velocity = char.HumanoidRootPart.Velocity + Vector3.new(0, char.Humanoid.JumpPower * (jumpBoostMultiplier-1), 0)
        end
    end
end

buttons.Jump.MouseButton1Click:Connect(function()
    toggles.Jump = not toggles.Jump
    buttons.JumpToggle.Text = toggles.Jump and "ON" or "OFF"
end)

uis.JumpRequest:Connect(onJumpRequest)

-- Auto Hit
local autoHitActive = false
local autoHitConnection = nil

local function equipTool()
    local backpack = player:FindFirstChildOfClass("Backpack")
    if backpack then
        local tool = backpack:FindFirstChild(toolName)
        if tool then
            player.Character.Humanoid:EquipTool(tool)
        end
    end
end

local function clickTool()
    equipTool()
    local tool = player.Character and player.Character:FindFirstChild(toolName)
    if tool and tool.Activate then
        tool:Activate()
    end
end

local function enableAutoHit()
    autoHitActive = true
    autoHitConnection = runService.RenderStepped:Connect(function()
        if toggles.AutoHit then
            clickTool()
        end
    end)
end

local function disableAutoHit()
    autoHitActive = false
    if autoHitConnection then
        autoHitConnection:Disconnect()
        autoHitConnection = nil
    end
end

buttons.AutoHit.MouseButton1Click:Connect(function()
    toggles.AutoHit = not toggles.AutoHit
    buttons.AutoHitToggle.Text = toggles.AutoHit and "ON" or "OFF"
    if toggles.AutoHit then
        enableAutoHit()
    else
        disableAutoHit()
    end
end)
