local player = game.Players.LocalPlayer
local runService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Função de smoothTP (teleporte suave)
local function smoothTP(targetPos, steps, delay)
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char.HumanoidRootPart
    -- Ativa noclip durante o movimento
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
    local diff = (targetPos - hrp.Position) / steps
    for i = 1, steps do
        hrp.CFrame = hrp.CFrame + diff
        task.wait(delay)
    end
    -- Restaura colisão
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
end

-- Funções Teleporte
local function tpWallStealth(dist)
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char.HumanoidRootPart
    local target = hrp.Position + hrp.CFrame.LookVector * dist
    smoothTP(target, 40, 0.03)
end

local function tpUpStealth(yAmount)
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local hrp = char.HumanoidRootPart
    local target = hrp.Position + Vector3.new(0, yAmount, 0)
    smoothTP(target, 50, 0.02)
end

-- Menu
local function createModMenu()
    if player.PlayerGui:FindFirstChild("ModMenuGui") then player.PlayerGui.ModMenuGui:Destroy() end
    local gui = Instance.new("ScreenGui", player.PlayerGui) gui.Name = "ModMenuGui"
    local btn = Instance.new("TextButton", gui)
    btn.Size = UDim2.new(0,120,0,40) btn.Position = UDim2.new(0.02,0,0.12,0)
    btn.BackgroundColor3 = Color3.new(.15,.1,.1) btn.Text = "MOD MENU"
    btn.TextColor3 = Color3.fromRGB(255,0,0) btn.Font = Enum.Font.GothamBold btn.TextSize = 20 btn.Draggable = true
    local menu = Instance.new("Frame", gui)
    menu.Size = UDim2.new(0,180,0,215) menu.Position = UDim2.new(0.02,130,0.12,0)
    menu.BackgroundColor3 = Color3.new(.12,.1,.1) menu.Visible = false
    local y,step = 10,38
    local function addToggle(txt,cb)
        local b = Instance.new("TextButton", menu)
        b.Size = UDim2.new(1,-20,0,32) b.Position = UDim2.new(0,10,0,y)
        b.BackgroundColor3 = Color3.new(.22,0,0) b.TextColor3 = Color3.new(1,1,1)
        b.Font = Enum.Font.Gotham b.TextSize = 17
        b.Text = txt.." [OFF]"
        b.MouseButton1Click:Connect(cb)
        y = y + step
        return b
    end

    -- Toggles
    local toggles = {Speed=false, Jump=false, InfJump=false}
    local speedVal, jumpVal = 32, 100   -- speed e pulo "boost"
    -- Speed Boost
    local speedBtn = addToggle("Speed Boost", function()
        toggles.Speed = not toggles.Speed
        speedBtn.Text = "Speed Boost [" .. (toggles.Speed and "ON" or "OFF") .. "]"
        speedBtn.TextColor3 = toggles.Speed and Color3.fromRGB(0,255,0) or Color3.new(1,1,1)
    end)
    -- Jump Boost
    local jumpBtn = addToggle("Jump Boost", function()
        toggles.Jump = not toggles.Jump
        jumpBtn.Text = "Jump Boost [" .. (toggles.Jump and "ON" or "OFF") .. "]"
        jumpBtn.TextColor3 = toggles.Jump and Color3.fromRGB(0,255,0) or Color3.new(1,1,1)
    end)
    -- Infinite Jump
    local infJumpConn
    local infJumpBtn = addToggle("Infinite Jump", function()
        toggles.InfJump = not toggles.InfJump
        infJumpBtn.Text = "Infinite Jump [" .. (toggles.InfJump and "ON" or "OFF") .. "]"
        infJumpBtn.TextColor3 = toggles.InfJump and Color3.fromRGB(0,255,0) or Color3.new(1,1,1)
        if toggles.InfJump and not infJumpConn then
            infJumpConn = UserInputService.JumpRequest:Connect(function()
                local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
                if hum then hum:ChangeState(Enum.HumanoidStateType.Jumping) end
            end)
        elseif not toggles.InfJump and infJumpConn then
            infJumpConn:Disconnect() infJumpConn = nil
        end
    end)
    -- TP Wall
    addToggle("TP Wall", function() tpWallStealth(10) end)
    -- TP UP
    addToggle("TP UP", function() tpUpStealth(30) end)

    btn.MouseButton1Click:Connect(function() menu.Visible = not menu.Visible end)

    -- Speed e Jump Boost loop
    runService.RenderStepped:Connect(function()
        local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if hum then
            if toggles.Speed then hum.WalkSpeed = speedVal else hum.WalkSpeed = 16 end
            if toggles.Jump then hum.JumpPower = jumpVal else hum.JumpPower = 50 end
        end
    end)
end

createModMenu()
player.CharacterAdded:Connect(function() task.wait(1) createModMenu() end)
