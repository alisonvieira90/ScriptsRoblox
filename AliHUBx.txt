if game:GetService("CoreGui"):FindFirstChild("ModMenuGui") then
    game:GetService("CoreGui").ModMenuGui:Destroy()
end

local imageId = "rbxassetid://83777934849279"
local toolName = "Tung Bat"
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local runService = game:GetService("RunService")
local soundService = game:GetService("SoundService")
local tweenService = game:GetService("TweenService")
local userInputService = game:GetService("UserInputService")
local baseY = 100

print("ðŸŽ® Tung Bat Mod Menu Carregado! Press F1 para abrir/fechar.")

local sounds = {
    click = Instance.new("Sound"),
    hover = Instance.new("Sound"),
    toggle = Instance.new("Sound")
}

sounds.click.SoundId = "rbxasset://sounds/button_press.mp3"
sounds.click.Volume = 0.5
sounds.click.Parent = soundService

sounds.hover.SoundId = "rbxasset://sounds/button_hover.mp3" 
sounds.hover.Volume = 0.3
sounds.hover.Parent = soundService

sounds.toggle.SoundId = "rbxasset://sounds/toggle_on.mp3"
sounds.toggle.Volume = 0.4
sounds.toggle.Parent = soundService

local function playSound(soundName)
    if sounds[soundName] then
        sounds[soundName]:Play()
    end
end

local function antiCheatBypass(char, targetPosition)
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    
    local hrp = char.HumanoidRootPart
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    
    local originalPos = hrp.CFrame
    local direction = (targetPosition.Position - originalPos.Position).Unit
    local distance = (targetPosition.Position - originalPos.Position).Magnitude
    
    local steps = math.ceil(distance / 3)
    local stepSize = distance / steps
    
    for i = 1, steps do
        local stepPos = originalPos.Position + (direction * (stepSize * i))
        hrp.CFrame = CFrame.new(stepPos, stepPos + direction)
        wait(0.03)
    end
    
    hrp.CFrame = targetPosition
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ModMenuGui"
screenGui.Parent = game:GetService("CoreGui")
screenGui.ResetOnSpawn = false

local mainButton = Instance.new("ImageButton")
mainButton.Name = "MainButton"
mainButton.Size = UDim2.new(0, 70, 0, 70)
mainButton.Position = UDim2.new(0.1, 0, 0.1, 0)
mainButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainButton.BorderSizePixel = 2
mainButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
mainButton.Image = imageId
mainButton.Parent = screenGui
mainButton.Draggable = true

local mainButtonGradient = Instance.new("UIGradient")
mainButtonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 51, 51)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 102, 102)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 51, 51))
}
mainButtonGradient.Rotation = 45
mainButtonGradient.Parent = mainButton

local mainButtonCorner = Instance.new("UICorner")
mainButtonCorner.CornerRadius = UDim.new(0, 12)
mainButtonCorner.Parent = mainButton

local modMenu = Instance.new("Frame")
modMenu.Name = "ModMenu"
modMenu.Size = UDim2.new(0, 280, 0, 350)
modMenu.Position = UDim2.new(0.1, 80, 0.1, 0)
modMenu.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
modMenu.BorderSizePixel = 2
modMenu.BorderColor3 = Color3.fromRGB(255, 0, 0)
modMenu.Visible = false
modMenu.Parent = screenGui

local menuGradient = Instance.new("UIGradient")
menuGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(26, 26, 26)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(45, 45, 45)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(26, 26, 26))
}
menuGradient.Rotation = 135
menuGradient.Parent = modMenu

local menuCorner = Instance.new("UICorner")
menuCorner.CornerRadius = UDim.new(0, 15)
menuCorner.Parent = modMenu

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 50)
title.BackgroundTransparency = 0
title.BackgroundColor3 = Color3.fromRGB(255, 51, 51)
title.Text = "ðŸŽ® MOD MENU"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 24
title.Parent = modMenu

local titleGradient = Instance.new("UIGradient")
titleGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 0, 0))
}
titleGradient.Rotation = 90
titleGradient.Parent = title

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 15)
titleCorner.Parent = title

local dragging = false
local dragInput, dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    modMenu.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

modMenu.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = modMenu.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

modMenu.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateDrag(input)
    end
end)

local function createToggle(name, ypos, icon)
    local frame = Instance.new("Frame")
    frame.BackgroundTransparency = 1
    frame.Size = UDim2.new(1, -20, 0, 45)
    frame.Position = UDim2.new(0, 10, 0, ypos)
    frame.Parent = modMenu
    
    local button = Instance.new("TextButton")
    button.Name = name.."Button"
    button.Size = UDim2.new(0.7, -5, 1, 0)
    button.Position = UDim2.new(0, 0, 0, 0)
    button.BackgroundColor3 = Color3.fromRGB(40, 0, 0)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.Gotham
    button.Text = icon.." "..name
    button.TextSize = 18
    button.Parent = frame
    
    local buttonGradient = Instance.new("UIGradient")
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(42, 0, 0)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(77, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(42, 0, 0))
    }
    buttonGradient.Rotation = 135
    buttonGradient.Parent = button
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    local toggle = Instance.new("TextLabel")
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(0.3, 0, 1, 0)
    toggle.Position = UDim2.new(0.7, 5, 0, 0)
    toggle.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    toggle.TextColor3 = Color3.fromRGB(255, 0, 0) 
    toggle.Font = Enum.Font.GothamBold
    toggle.Text = "OFF"
    toggle.TextSize = 16
    toggle.Parent = frame
    
    local toggleGradient = Instance.new("UIGradient")
    toggleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 0, 0))
    }
    toggleGradient.Rotation = 90
    toggleGradient.Parent = toggle
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 8)
    toggleCorner.Parent = toggle
    
    button.MouseEnter:Connect(function()
        playSound("hover")
        local tween = tweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 0, 0)})
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tween = tweenService:Create(button, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 0, 0)})
        tween:Play()
    end)
    
    return button, toggle
end

local y = 60
local buttons = {}

buttons.TPWall, buttons.TPWallToggle = createToggle("TP Wall", y, "ðŸš€")
buttons.Speed, buttons.SpeedToggle = createToggle("Speed Boost", y+50, "âš¡")
buttons.Jump, buttons.JumpToggle = createToggle("Jump Boost", y+100, "ðŸ¦˜")
buttons.AutoHit, buttons.AutoHitToggle = createToggle("Auto Hit", y+150, "ðŸŽ¯")
buttons.TPUP, buttons.TPUPToggle = createToggle("TP UP", y+200, "ðŸš€")

local toggles = {
    TPWall = false,
    Speed = false,
    Jump = false,
    AutoHit = false,
    TPUP = false,
}

local connections = {}

mainButton.MouseButton1Click:Connect(function()
    playSound("click")
    modMenu.Visible = not modMenu.Visible
end)

userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F1 then
        modMenu.Visible = not modMenu.Visible
        playSound("click")
    end
end)

buttons.TPWall.MouseButton1Click:Connect(function()
    playSound("click")
    toggles.TPWall = not toggles.TPWall
    buttons.TPWallToggle.Text = toggles.TPWall and "ON" or "OFF"
    buttons.TPWallToggle.TextColor3 = toggles.TPWall and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    
    if toggles.TPWall then
        playSound("toggle")
        local tpGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
        tpGui.Name = "TPWallGui"
        
        local tpButton = Instance.new("TextButton", tpGui)
        tpButton.Size = UDim2.new(0, 100, 0, 40)
        tpButton.Position = UDim2.new(0.5, -50, 0.7, 0)
        tpButton.BackgroundColor3 = Color3.fromRGB(255, 51, 51)
        tpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        tpButton.Font = Enum.Font.GothamBold
        tpButton.Text = "ðŸš€ TP WALL"
        tpButton.TextSize = 16
        
        local tpCorner = Instance.new("UICorner")
        tpCorner.CornerRadius = UDim.new(0, 10)
        tpCorner.Parent = tpButton
        
        local tpGradient = Instance.new("UIGradient")
        tpGradient.Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 51, 51)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 0, 0))
        }
        tpGradient.Parent = tpButton
        
        local function tpForward()
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local hrp = char.HumanoidRootPart
                local targetPos = hrp.CFrame + hrp.CFrame.LookVector * 8
                antiCheatBypass(char, targetPos)
            end
        end
        
        connections.tpw = tpButton.MouseButton1Click:Connect(function()
            playSound("click")
            tpForward()
        end)
    else
        if game:GetService("CoreGui"):FindFirstChild("TPWallGui") then
            game:GetService("CoreGui").TPWallGui:Destroy()
        end
        if connections.tpw then
            connections.tpw:Disconnect()
            connections.tpw = nil
        end
    end
end)

local speedConnection
local bodyVelocity

buttons.Speed.MouseButton1Click:Connect(function()
    playSound("click")
    toggles.Speed = not toggles.Speed
    buttons.SpeedToggle.Text = toggles.Speed and "ON" or "OFF"
    buttons.SpeedToggle.TextColor3 = toggles.Speed and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    
    if toggles.Speed then
        playSound("toggle")
        speedConnection = runService.Heartbeat:Connect(function()
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local hrp = char.HumanoidRootPart
                local humanoid = char:FindFirstChildOfClass("Humanoid")
                
                if humanoid and humanoid.MoveDirection.Magnitude > 0 then
                    if not bodyVelocity then
                        bodyVelocity = Instance.new("BodyVelocity")
                        bodyVelocity.MaxForce = Vector3.new(4000, 0, 4000)
                        bodyVelocity.Parent = hrp
                    end
                    
                    local moveVector = humanoid.MoveDirection * 50
                    bodyVelocity.Velocity = Vector3.new(moveVector.X, hrp.Velocity.Y, moveVector.Z)
                else
                    if bodyVelocity then
                        bodyVelocity:Destroy()
                        bodyVelocity = nil
                    end
                end
            end
        end)
    else
        if speedConnection then
            speedConnection:Disconnect()
            speedConnection = nil
        end
        if bodyVelocity then
            bodyVelocity:Destroy()
            bodyVelocity = nil
        end
    end
end)

local jumpConnection
local originalJumpPower

buttons.Jump.MouseButton1Click:Connect(function()
    playSound("click")
    toggles.Jump = not toggles.Jump
    buttons.JumpToggle.Text = toggles.Jump and "ON" or "OFF"
    buttons.JumpToggle.TextColor3 = toggles.Jump and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    
    if toggles.Jump then
        playSound("toggle")
        jumpConnection = runService.Heartbeat:Connect(function()
            local char = player.Character
            if char then
                local humanoid = char:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    if not originalJumpPower then
                        originalJumpPower = humanoid.JumpPower or 50
                    end
                    
                    humanoid.JumpPower = 150
                    
                    if humanoid.Jump then
                        local bodyVelocity = char.HumanoidRootPart:FindFirstChild("JumpBoost")
                        if not bodyVelocity then
                            bodyVelocity = Instance.new("BodyVelocity")
                            bodyVelocity.Name = "JumpBoost"
                            bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
                            bodyVelocity.Velocity = Vector3.new(0, 80, 0)
                            bodyVelocity.Parent = char.HumanoidRootPart
                            
                            game:GetService("Debris"):AddItem(bodyVelocity, 0.5)
                        end
                    end
                end
            end
        end)
    else
        if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
        end
        
        local char = player.Character
        if char then
            local humanoid = char:FindFirstChildOfClass("Humanoid")
            if humanoid and originalJumpPower then
                humanoid.JumpPower = originalJumpPower
            end
            
            local jumpBoost = char.HumanoidRootPart:FindFirstChild("JumpBoost")
            if jumpBoost then
                jumpBoost:Destroy()
            end
        end
    end
end)

local autoHitConnection

buttons.AutoHit.MouseButton1Click:Connect(function()
    playSound("click")
    toggles.AutoHit = not toggles.AutoHit
    buttons.AutoHitToggle.Text = toggles.AutoHit and "ON" or "OFF"
    buttons.AutoHitToggle.TextColor3 = toggles.AutoHit and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    
    if toggles.AutoHit then
        playSound("toggle")
        autoHitConnection = runService.Heartbeat:Connect(function()
            local char = player.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                local tool = char:FindFirstChildOfClass("Tool")
                if tool and tool.Name == toolName then
                    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                        if otherPlayer ~= player and otherPlayer.Character then
                            local otherHrp = otherPlayer.Character:FindFirstChild("HumanoidRootPart")
                            if otherHrp then
                                local distance = (char.HumanoidRootPart.Position - otherHrp.Position).Magnitude
                                if distance <= 20 then
                                    tool:Activate()
                                    break
                                end
                            end
                        end
                    end
                end
            end
        end)
    else
        if autoHitConnection then
            autoHitConnection:Disconnect()
            autoHitConnection = nil
        end
    end
end)

local tpUpConnection

buttons.TPUP.MouseButton1Click:Connect(function()
    playSound("click")
    toggles.TPUP = not toggles.TPUP
    buttons.TPUPToggle.Text = toggles.TPUP and "ON" or "OFF"
    buttons.TPUPToggle.TextColor3 = toggles.TPUP and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    
    if toggles.TPUP then
        playSound("toggle")
        local char = player.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local hrp = char.HumanoidRootPart
            local newPos = hrp.CFrame + Vector3.new(0, baseY, 0)
            antiCheatBypass(char, newPos)
        end
    end
end)

local function resetConnections()
    if speedConnection then
        speedConnection:Disconnect()
        speedConnection = nil
    end
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    if jumpConnection then
        jumpConnection:Disconnect()
        jumpConnection = nil
    end
    if autoHitConnection then
        autoHitConnection:Disconnect()
        autoHitConnection = nil
    end
    originalJumpPower = nil
end

player.CharacterAdded:Connect(function()
    wait(1)
    resetConnections()
    
    for feature, state in pairs(toggles) do
        if state then
            toggles[feature] = false
            if buttons[feature.."Toggle"] then
                buttons[feature.."Toggle"].Text = "OFF"
                buttons[feature.."Toggle"].TextColor3 = Color3.fromRGB(255,0,0)
            end
        end
    end
end)
