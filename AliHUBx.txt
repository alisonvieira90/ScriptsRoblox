local imageId = "rbxassetid://83777934849279"
local toolName = "Tung Bat"

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local runService = game:GetService("RunService")

local baseY = 100

local function freezeCharacterAtPosition(char, position, freezeTime)
    freezeTime = freezeTime or 1
    for _, part in ipairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = true
        end
    end

    if char:FindFirstChild("HumanoidRootPart") then  
        char.HumanoidRootPart.CFrame = position  
    end  

    local conn  
    conn = runService.RenderStepped:Connect(function()  
        if char and char:FindFirstChild("HumanoidRootPart") then  
            char.HumanoidRootPart.CFrame = position  
        else  
            conn:Disconnect()  
        end  
    end)  

    wait(freezeTime)  

    for _, part in ipairs(char:GetDescendants()) do  
        if part:IsA("BasePart") then  
            part.Anchored = false  
        end  
    end  

    if conn then conn:Disconnect() end
end

local function tpForward()
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local hrp = char.HumanoidRootPart
        local targetPos = hrp.CFrame + hrp.CFrame.LookVector * 5

        hrp.CFrame = targetPos  
        freezeCharacterAtPosition(char, targetPos, 1)  
    end
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ModMenuGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

local mainButton = Instance.new("ImageButton")
mainButton.Name = "MainButton"
mainButton.Size = UDim2.new(0, 70, 0, 70)
mainButton.Position = UDim2.new(0.1, 0, 0.1, 0)
mainButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainButton.BorderSizePixel = 2
mainButton.BorderColor3 = Color3.fromRGB(255, 0, 0)
mainButton.Image = imageId
mainButton.Parent = screenGui
mainButton.Draggable = true

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10)
uiCorner.Parent = mainButton

local modMenu = Instance.new("Frame")
modMenu.Name = "ModMenu"
modMenu.Size = UDim2.new(0, 250, 0, 320)
modMenu.Position = UDim2.new(0.1, 80, 0.1, 0)
modMenu.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
modMenu.BorderSizePixel = 2
modMenu.BorderColor3 = Color3.fromRGB(255, 0, 0)
modMenu.Visible = false
modMenu.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Text = "MOD MENU"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(255, 0, 0)
title.TextSize = 28
title.Parent = modMenu

local function createToggle(name, ypos)
    local frame = Instance.new("Frame")
    frame.BackgroundTransparency = 1
    frame.Size = UDim2.new(1, -20, 0, 45)
    frame.Position = UDim2.new(0, 10, 0, ypos)
    frame.Parent = modMenu

    local button = Instance.new("TextButton")  
    button.Name = name.."Button"  
    button.Size = UDim2.new(0.7, 0, 1, 0)  
    button.Position = UDim2.new(0, 0, 0, 0)  
    button.BackgroundColor3 = Color3.fromRGB(40, 0, 0)  
    button.TextColor3 = Color3.fromRGB(255, 255, 255)  
    button.Font = Enum.Font.Gotham  
    button.Text = name  
    button.TextSize = 20  
    button.Parent = frame  

    local toggle = Instance.new("TextLabel")  
    toggle.Name = "Toggle"  
    toggle.Size = UDim2.new(0.3, 0, 1, 0)  
    toggle.Position = UDim2.new(0.7, 0, 0, 0)  
    toggle.BackgroundColor3 = Color3.fromRGB(60, 0, 0)  
    toggle.TextColor3 = Color3.fromRGB(255, 0, 0)  
    toggle.Font = Enum.Font.GothamBold  
    toggle.Text = "OFF"  
    toggle.TextSize = 18  
    toggle.Parent = frame  

    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 5)
    buttonCorner.Parent = button

    return button, toggle
end

local y = 50
local buttons = {}
buttons.TPWall, buttons.TPWallToggle = createToggle("TP Wall", y)
buttons.Speed, buttons.SpeedToggle = createToggle("Speed Boost", y + 50)
buttons.Jump, buttons.JumpToggle = createToggle("Jump Boost", y + 100)
buttons.AutoHit, buttons.AutoHitToggle = createToggle("Auto Hit", y + 150)
buttons.TPUP, buttons.TPUPToggle = createToggle("TP UP", y + 200)

local toggles = {
    TPWall = false,
    Speed = false,
    Jump = false,
    AutoHit = false,
    TPUP = false,
}

local speedValue = 35
local normalSpeed = 16
local jumpValue = 120
local normalJump = 50

local function applySpeed()
    local char = player.Character
    if not char then return end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    if toggles.Speed then
        humanoid:ChangeState(Enum.HumanoidStateType.Running)
        humanoid.WalkSpeed = speedValue
    else
        humanoid.WalkSpeed = normalSpeed
    end
end

local function applyJump()
    local char = player.Character
    if not char then return end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    if toggles.Jump then
        humanoid.UseJumpPower = true
        humanoid.JumpPower = jumpValue
    else
        humanoid.JumpPower = normalJump
    end
end

buttons.Speed.MouseButton1Click:Connect(function()
    toggles.Speed = not toggles.Speed
    buttons.SpeedToggle.Text = toggles.Speed and "ON" or "OFF"
    buttons.SpeedToggle.TextColor3 = toggles.Speed and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    applySpeed()
end)

buttons.Jump.MouseButton1Click:Connect(function()
    toggles.Jump = not toggles.Jump
    buttons.JumpToggle.Text = toggles.Jump and "ON" or "OFF"
    buttons.JumpToggle.TextColor3 = toggles.Jump and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,0,0)
    applyJump()
end)
